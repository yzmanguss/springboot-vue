<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunyun.financemanager.contract.mapper.ContractMapper">

    <!--合同信息-->
    <resultMap id="Contract" type="com.yunyun.financemanager.common.vo.ContractVO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="contract_name" jdbcType="VARCHAR" property="contractName"/>
        <result column="contract_number" jdbcType="VARCHAR" property="contractNumber"/>
        <result column="amount" jdbcType="BIGINT" property="amount"/>
        <result column="contract_status" jdbcType="TINYINT" property="contractStatus"/>
        <result column="customer_name" jdbcType="VARCHAR" property="customerName"/>
        <result column="sign_date" jdbcType="DATE" property="signDate"/>
        <!--<result column="project_id" jdbcType="INTEGER" property="projectId"/>-->
    </resultMap>

    <select id="listContractByPage" resultMap="Contract">
        select c.id, contract_number, contract_name, customer_name, contract_status, amount, c.sign_date
        from contract c
        <where>
            <if test="keyWord != null and keyWord != ''">
                contract_name like concat('%',#{keyWord},'%')
            </if>
            <if test="contractStatus != null and contractStatus != '' or contractStatus == 0">
                and contract_status = #{contractStatus}
            </if>
            <if test="signDateStart != null  and signDateEnd != null">
                and c.sign_date between #{signDateStart} and #{signDateEnd}
            </if>
        </where>
    </select>

    <!--    <select id="isContractAssociatedProject" resultType="int">-->
    <!--    	select count(*) from contract c-->
    <!--    	join project p-->
    <!--    	on c.id = p.contract_id-->
    <!--    	where c.id = #{id}-->
    <!--	</select>-->

    <resultMap id="ContractAndPhases" type="com.yunyun.financemanager.common.entity.Contract">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="contract_name" jdbcType="VARCHAR" property="contractName"/>
        <result column="contract_number" jdbcType="VARCHAR" property="contractNumber"/>
        <result column="amount" jdbcType="BIGINT" property="amount"/>
        <result column="contract_status" jdbcType="TINYINT" property="contractStatus"/>
        <result column="customer_name" jdbcType="VARCHAR" property="customerName"/>
        <result column="customer_contact_name" jdbcType="VARCHAR" property="customerContactName"/>
        <result column="customer_contact_phone" jdbcType="VARCHAR" property="customerContactPhone"/>
        <result column="sign_date" jdbcType="DATE" property="signDate"/>
        <result column="start_date" jdbcType="DATE" property="startDate"/>
        <result column="finish_date" jdbcType="DATE" property="finishDate"/>
        <collection property="phases"
                    select="com.yunyun.financemanager.contract.mapper.PhaseMapper.findPhasesByContractId"
                    ofType="com.yunyun.financemanager.common.entity.Phase" column="id">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="phase_index" jdbcType="INTEGER" property="phaseIndex"/>
            <result column="amount" jdbcType="BIGINT" property="amount"/>
            <result column="start_date" jdbcType="DATE" property="startDate"/>
            <result column="finish_date" jdbcType="DATE" property="finishDate"/>
            <result column="contract_id" jdbcType="INTEGER" property="contractId"/>
        </collection>
    </resultMap>

    <select id="getContractById" resultMap="ContractAndPhases">
    select *
    from contract
    where id = #{id}
  </select>

    <select id="selectContractNames" resultType="com.yunyun.financemanager.common.entity.Contract">
    select id, contract_name
    from contract
    where contract_name like '%' #{name} '%'
  </select>

    <select id="selectYearAmountGroupByMonth" resultType="com.yunyun.financemanager.common.vo.LineChartVO">
    select MONTH(sign_date) as `index`, SUM(amount) as value
    FROM contract
    where DATE_FORMAT(sign_date, '%Y') = #{year}
    group by `index`;
  </select>

    <select id="getMonthAmountGroupByDay" resultType="com.yunyun.financemanager.common.vo.LineChartVO">
    select DAY(sign_date) as `index`, SUM(amount) as value
    FROM contract
    where DATE_FORMAT(sign_date, '%Y') = #{year}
      and DATE_FORMAT(sign_date, '%m') = #{month}
                      group by `index`;
  </select>

</mapper>